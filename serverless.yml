
service: connect-scheduler

provider:
  name: "aws"
  runtime: "python3.7"
  region: "eu-west-1"
  defaultStage: "dev"
  memorySize: 128
  timeout: 15
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:UpdateItem"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Query"
        - "dynamodb:ListTables"
      Resource: "*"

custom:
    db: "CF-InstanceScheduler-WK"
    cors:
      origin: "*"
      headers:
        - Access-Control-Allow-Origin
        - Authorization
        - Content-Type
        - X-Amz-Date
        - X-Amz-Security-Token

functions:
  addPAS:
    handler: "app.add.lambda_handler"
    description: "Add period/schedule/backup to DB"
    environment:
      db: "${self:custom.db}"
    events:
      - http:
          path: "pas"
          method: "post"
          cors: "${self:custom.cors}"
  removePAS:
    handler: "app.remove.lambda_handler"
    description: "Remove period/schedule/backup from DB"
    environment:
      db: "${self:custom.db}"
    events:
      - http:
          path: "pas"
          method: "delete"
          cors: "${self:custom.cors}"
  getPAS:
    handler: "app.get.lambda_handler"
    description: "Get period/schedule/backup from DB"
    environment:
      db: "${self:custom.db}"
    events:
      - http:
          path: "get/pas"
          method: "post"
          cors: "${self:custom.cors}"
  modifyPAS:
    handler: "app.modify.lambda_handler"
    description: "Modify period/schedule/backup in DB"
    environment:
      db: "${self:custom.db}"
    events:
      - http:
          path: "modify/pas"
          method: "post"
          cors: "${self:custom.cors}"
  getInstances:
    handler: "app.get_instances.lambda_handler"
    description: "Get instances"
    environment:
      db: "${self:custom.db}"
    events:
      - http:
          path: "pas/instances"
          method: "post"
          cors: "${self:custom.cors}"